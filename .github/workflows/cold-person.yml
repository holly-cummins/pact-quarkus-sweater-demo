# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Cold Person CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'cold-person/**'
      - 'observer-extension/**'
      - '.github/workflows/cold-person.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'cold-person/**'
      - 'observer-extension/**'
      - '.github/workflows/cold-person.yml'

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './cold-person'
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    # Rather than fussing around with upload and download jobs, just build the extension we depend on, since it's so small
    - name: Build Extension with Maven
      run: mvn -B install --file ../observer-extension/pom.xml
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      if: github.event_name != 'pull_request'
      uses: advanced-security/maven-dependency-submission-action@v4.1.1
      with:
        directory: './cold-person'
        ignore-maven-wrapper: true # if left as the default it will get confused and double-nest and look in farmer/farmer for the wrapper
